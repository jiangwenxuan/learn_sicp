(define (square a)
  (* a a))
(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (square (expmod base (/ exp 2) m))
                    m))
        (else
         (remainder (* (remainder base m) (expmod base (- exp 1) m))
                    m))))
(define (fermat-test n)
  (define (try-it a)
    (= (expmod a n n) a))
  (try-it (+ 1 (random (- n 1)))))
(define (fast-prime n times)
  (cond ((= times 0) true)
        ((fermat-test n) (fast-prime n (- times 1)))
        (else false)))
(define (f-prime n)
  (fast-prime n 10))

(f-prime 1105)
(f-prime 561)
(f-prime 1729)
(f-prime 2465)
(f-prime 2821)
(f-prime 6601)