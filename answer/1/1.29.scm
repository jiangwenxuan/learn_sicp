(define (new-sum f a next b mark)
  (cond ((> a b) 0)
        ((= mark 0)
         (+ (f a)
            (new-sum f (next a) next b (+ mark 1))))
        ((even? mark)
         (+ (* 2 (f a))
            (new-sum f (next a) next b (+ mark 1))))
        (else
         (+ (* 4 (f a))
            (new-sum f (next a) next b (+ mark 1))))))
(define (cube-sum a b n)
  (define h
    (/ (- b a) n))
  (define (next a)
    (+ a h))
  (* (/ h 3)
     (new-sum cube a next b 0)))
(define (cube a)
  (* a a a))